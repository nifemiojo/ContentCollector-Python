version: "3"

services:
  db:
    image: postgres:13
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - ./.env.prod.db
  web:
    build: .
    command: sh -c "pipenv run python3 manage.py makemigrations && 
      pipenv run python3 manage.py migrate && 
      pipenv run python3 manage.py collectstatic --noinput &&
      pipenv run gunicorn -b 0.0.0.0:8000 --log-file ./logs/log --workers 3 config.wsgi:application"
    volumes:
      - .:/home/app
    ports:
      - 80:8000
      - 443:8000
    env_file:
      - ./.env.staging
    depends_on:
      - db
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - .env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - nginx-proxy
volumes:
  certs:
  html:
  vhost: